# AIOps Infrastructure Configuration

# API-сервер
api:
  port: 8080
  host: "0.0.0.0"
  enable_cors: true
  timeout: 30s

# Настройки оркестратора
orchestrator:
  max_concurrent_actions: 10
  action_timeout: 5m
  history_limit: 1000

# Настройки детектора аномалий
detector:
  statsd_address: "localhost:8125"
  log_anomalies: true
  default_threshold: 2.0

# Настройки Prometheus
prometheus:
  enabled: true
  url: "http://prometheus:9090"
  collect_interval: 1m
  alert_ttl: 30m
  rules_path: "/etc/prometheus/rules"
  evaluation_interval: "15s"
  scrape_interval: "15s"
  storage_retention: "15d"
  default_detectors:
    - name: cpu_usage
      type: statistical
      threshold: 90.0
    - name: memory_usage
      type: window
      threshold: 85.0
      window_size: 30
    - name: api_latency
      type: window
      threshold: 0.5
      window_size: 60
    - name: http_errors
      type: statistical
      threshold: 5.0

# Настройки Loki
loki:
  enabled: true
  url: "http://loki:3100"

# Настройки Kubernetes
kubernetes:
  inCluster: false
  kubeConfigPath: "~/.kube/config"
  namespace: "default"
  service_account: ""

# Настройки оповещений
notifications:
  slack:
    webhook_url: "https://hooks.slack.com/services/YOUR_WEBHOOK_URL"
    default_channel: "#alerts"
    username: "AIOps-Bot"
  email:
    smtp_server: "smtp.example.com:587"
    from: "aiops-alerts@example.com"
    to: 
      - "admin@example.com"
      - "devops@example.com"
    auth:
      username: "alerts@example.com"
      password: "secret_password"
    enable_tls: true
    template_path: "templates/email.html"
  webhook:
    url: ""
    headers:
      Content-Type: "application/json"

# Настройки логирования
logging:
  level: "info"
  format: "json"
  output: "stdout"
  file: "/var/log/aiops-detector.log"

# Настройки скриптов восстановления
scripts:
  dir: "/etc/aiops-detector/scripts"
  timeout: 60s
  allowed_prefixes:
    - "restart_"
    - "fix_"
    - "scale_"

# Настройки детекторов аномалий
detectors:
  # Пороговые значения для метрик Prometheus
  prometheus:
    cpu:
      threshold: 3.0
      windowSize: 10
    memory:
      threshold: 3.0
      minSamples: 30
    disk:
      threshold: 2.5
      windowSize: 5
    latency:
      threshold: 0.8
      algorithm: "isolation_forest"
      numTrees: 100
      sampleSize: 256
  
  # Пороговые значения для логов
  logs:
    errorThreshold: 10
    warningThreshold: 20
    timeWindow: 5  # в минутах
    
# Настройки действий при обнаружении аномалий
actions:
  # Действия для проблем с CPU
  cpu_usage:
    type: "kubernetes"
    params:
      action: "scale"
      namespace: "default"
      deployment: "app-deployment"
      replicas: 3
      
  # Действия для проблем с памятью
  memory_usage:
    type: "kubernetes"
    params:
      action: "restart"
      namespace: "default"
      pod: "app-pod"
      
  # Действия для проблем с дисками
  disk_usage:
    type: "script"
    params:
      script: "cleanup.sh"
      args: 
        - "/var/log"
        - "7"  # удаление логов старше 7 дней
        
  # Действия для проблем с логами
  high_error_rate:
    type: "notification"
    params:
      channel: "slack"
      severity: "high"
      message: "Обнаружена высокая частота ошибок в логах"

# Шаблоны регулярных выражений для поиска в логах
log_patterns:
  # Шаблоны для поиска ошибок
  - name: "oom_kill"
    pattern: "Out of memory: Kill process|Killed process"
    severity: "high"
    action: "memory_usage"
    
  # Шаблоны для поиска предупреждений
  - name: "disk_space"
    pattern: "No space left on device|disk space"
    severity: "high"
    action: "disk_usage"
    
  # Шаблоны для поиска проблем с сетью
  - name: "network_issues"
    pattern: "Connection refused|Connection reset|Connection timed out"
    severity: "medium"
    action: "notification"
    
  # Шаблоны для поиска проблем с авторизацией
  - name: "auth_failures"
    pattern: "Authentication failed|Access denied|Permission denied"
    severity: "high"
    action: "notification" 