name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: your-registry
  VERSION: ${{ github.sha }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Install dependencies
        run: go mod download
        
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
        
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push anomaly detector
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/anomaly-detector/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/anomaly-detector:latest
            ${{ env.DOCKER_REGISTRY }}/anomaly-detector:${{ env.VERSION }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/anomaly-detector:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/anomaly-detector:buildcache,mode=max
          
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
          
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          chmod 600 kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          
      - name: Update deployment
        run: |
          # Update image tag in deployment
          sed -i "s|your-registry/anomaly-detector:latest|${{ env.DOCKER_REGISTRY }}/anomaly-detector:${{ env.VERSION }}|" kubernetes/ml-pipeline/anomaly-detector.yaml
          # Apply deployment
          kubectl apply -f kubernetes/ml-pipeline/anomaly-detector.yaml
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/anomaly-detector -n aiops 